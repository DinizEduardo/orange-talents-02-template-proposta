# data source
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.platform=${DB_PLATFORM}

# jpa
spring.jpa.database=${DB_DATABASE}
spring.jpa.show-sql=${JPA_SHOW_SQL}
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO}

spring.database.driverClassName=${DB_DRIVER}


# feign
status.api=${STATUS_API}
cartao.api=${CARTAO_API}

## actuator and prometheus
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
management.endpoints.prometheus.enabled=true

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=propostas

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

